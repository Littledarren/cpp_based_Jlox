



//lox file

/*
 *
 * comment test
 *
 */
print "===================TEST===================";
fun fib(n) {
    if (n <= 1) return n;
    return fib(n-2) + fib(n-1);
}

var before = clock();
print fib(10);
var after = clock();
print (after - before);

var makeCounter = fun () {
    var i = 0;
    fun count() {
        i = i + 1;
        print i;
    }
    return count;
};

print makeCounter;


var counter = makeCounter();
counter();
counter();
print "native func clock:" + clock();
print "===================TEST===================";
class Devonshirecream {
    serveOn() {
        print this.x+this.x;
        return "Scones";
    }
}
print Devonshirecream;
print Devonshirecream();
print "===================TEST===================";
var x = Devonshirecream();
x.x = 9;
print x.x;

print x.serveOn();

print "===================TEST===================";

class Cake {
    class class_method() {
        print "class method";
        //this;
    }

    init() {
        this.flavor = "this init test"
    }
    taste() {
        var adjective = "delicious";
        print "the " + this.flavor + " cake is " + adjective + "!";
    }
    getCallback() {
        fun localFunc() {
            print this;
        }
        return localFunc;
    }

}

Cake.class_method();
print "===================TEST===================";
var cake = Cake();
cake.flavor = "Chocolote";
cake.taste();

cake = Cake();
cake.flavor = "banana";
cake.taste();

var callback = Cake().getCallback();
callback();

cake = Cake();
cake.taste();
print +10;
print "===================TEST===================";

class Doughnut {
    cook() {
        print "Fry until golden brown.";
    }
}

class BostonCream < Doughnut {}

BostonCream().cook();

print "===================TEST===================";

class A {
    method() {
        print "A method";
    }
    pp() {
        print "inherit";
    }
}

class B < A{
    method() {
        print "B method";
    }
    test() {
        super.method();
    }
}

class C < B {}

C().method();
C().pp();
C().test();

//print "input something and will echo ";
//var str = input();
//print str;


/* vim: set filetype=javascript : */
